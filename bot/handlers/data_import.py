# bot/handlers/data_import.py

import logging
import os
from telegram import Update
from telegram.constants import ParseMode
from telegram.ext import ContextTypes, MessageHandler, filters

from bot.middleware.security import check_user_role
from services.import_service import ImportService
from utils.chat_utils import auto_clean
from utils.localization import get_user_language, get_text
from utils.constants import TEMP_DIR

logger = logging.getLogger(__name__)

@auto_clean
async def handle_directories_excel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π Excel-—Ñ–∞–π–ª —Å–æ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞–º–∏"""
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø —Ñ–∞–π–ª–∞
    excel_mime_type = "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
    if not update.message.document or update.message.document.mime_type != excel_mime_type:
        return  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –Ω–µ-Excel —Ñ–∞–π–ª—ã
    
    user_id = str(update.effective_user.id)
    user_role = check_user_role(user_id)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
    if not user_role.get('isAdmin'):
        await update.message.reply_text("‚õîÔ∏è –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤.")
        return
    
    # –£–≤–µ–¥–æ–º–ª—è–µ–º –æ –Ω–∞—á–∞–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
    processing_message = await update.message.reply_text(
        "‚úÖ –§–∞–π–ª –ø–æ–ª—É—á–µ–Ω. –ù–∞—á–∏–Ω–∞—é –æ–±—Ä–∞–±–æ—Ç–∫—É —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤...",
        parse_mode=ParseMode.MARKDOWN
    )
    
    file_path = None
    
    try:
        # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
        ImportService.create_temp_directory()
        
        # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
        file = await context.bot.get_file(update.message.document.file_id)
        file_path = os.path.join(TEMP_DIR, f"upload_{file.file_id}.xlsx")
        await file.download_to_drive(file_path)
        
        logger.info(f"–§–∞–π–ª —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤ –∑–∞–≥—Ä—É–∂–µ–Ω: {file_path}")
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–∞–π–ª —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–∏—Å
        result = ImportService.import_directories_from_excel(file_path)
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        summary_text = ImportService.format_import_summary(result)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        await processing_message.edit_text(
            summary_text,
            parse_mode=ParseMode.MARKDOWN
        )
        
        # –õ–æ–≥–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        if result['success']:
            counters = result['counters']
            logger.info(f"–ò–º–ø–æ—Ä—Ç —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {user_id}: "
                       f"–¥–∏—Å—Ü–∏–ø–ª–∏–Ω—ã +{counters['disciplines']}, "
                       f"–∫–æ—Ä–ø—É—Å–∞ {counters['objects']}, "
                       f"–≤–∏–¥—ã —Ä–∞–±–æ—Ç {counters['work_types']}")
        else:
            logger.error(f"–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {user_id}: {result.get('error')}")
        
    except Exception as e:
        logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ Excel-—Ñ–∞–π–ª–∞ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤ –æ—Ç {user_id}: {e}")
        
        try:
            await processing_message.edit_text(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞. "
                "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ñ–∞–π–ª–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —à–∞–±–ª–æ–Ω—É.",
                parse_mode=ParseMode.MARKDOWN
            )
        except Exception as edit_error:
            # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ
            await update.message.reply_text(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞.",
                parse_mode=ParseMode.MARKDOWN
            )
    
    finally:
        # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        if file_path:
            ImportService.cleanup_temp_file(file_path)

async def handle_database_restore_file(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ñ–∞–π–ª –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ë–î (—Ç–æ–ª—å–∫–æ –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞)"""
    from config.settings import OWNER_ID
    
    user_id = str(update.effective_user.id)
    
    # –¢–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü –º–æ–∂–µ—Ç –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å –ë–î
    if user_id != OWNER_ID:
        await update.message.reply_text("‚õîÔ∏è –¢–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü –±–æ—Ç–∞ –º–æ–∂–µ—Ç –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å –ë–î.")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø —Ñ–∞–π–ª–∞
    excel_mime_type = "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
    if not update.message.document or update.message.document.mime_type != excel_mime_type:
        await update.message.reply_text("‚ùå –î–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ë–î —Ç—Ä–µ–±—É–µ—Ç—Å—è Excel —Ñ–∞–π–ª.")
        return
    
    # –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã
    warning_message = await update.message.reply_text(
        "‚ö†Ô∏è **–í–ù–ò–ú–ê–ù–ò–ï!** –í—ã —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ë–î –∏–∑ —Ñ–∞–π–ª–∞.\n"
        "**–í–°–ï –¢–ï–ö–£–©–ò–ï –î–ê–ù–ù–´–ï –ë–£–î–£–¢ –£–î–ê–õ–ï–ù–´!**\n\n"
        "–î–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: `CONFIRM RESTORE`",
        parse_mode=ParseMode.MARKDOWN
    )
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
    try:
        ImportService.create_temp_directory()
        file = await context.bot.get_file(update.message.document.file_id)
        file_path = os.path.join(TEMP_DIR, f"restore_db_{user_id}.xlsx")
        await file.download_to_drive(file_path)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        context.user_data['pending_restore_file'] = file_path
        
        logger.info(f"–§–∞–π–ª –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ë–î –∑–∞–≥—Ä—É–∂–µ–Ω –æ—Ç –≤–ª–∞–¥–µ–ª—å—Ü–∞ {user_id}: {file_path}")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ë–î: {e}")
        await update.message.reply_text(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞.",
            parse_mode=ParseMode.MARKDOWN
        )

async def handle_restore_confirmation(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ë–î"""
    from config.settings import OWNER_ID
    
    user_id = str(update.effective_user.id)
    
    # –¢–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü –º–æ–∂–µ—Ç –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å –ë–î
    if user_id != OWNER_ID:
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–∞–Ω–¥—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    if update.message.text != "CONFIRM RESTORE":
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ñ–∞–π–ª –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
    file_path = context.user_data.get('pending_restore_file')
    if not file_path or not os.path.exists(file_path):
        await update.message.reply_text(
            "‚ùå –§–∞–π–ª –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω. –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª –∑–∞–Ω–æ–≤–æ.",
            parse_mode=ParseMode.MARKDOWN
        )
        return
    
    # –ù–∞—á–∏–Ω–∞–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ
    processing_message = await update.message.reply_text(
        "üîÑ **–ù–∞—á–∏–Ω–∞—é –ø–æ–ª–Ω–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ë–î...**\n"
        "‚è≥ –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç.",
        parse_mode=ParseMode.MARKDOWN
    )
    
    try:
        # –í—ã–ø–æ–ª–Ω—è–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ
        result = ImportService.restore_full_database_from_excel(file_path)
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        summary_text = ImportService.format_restore_summary(result)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        await processing_message.edit_text(
            summary_text,
            parse_mode=ParseMode.MARKDOWN
        )
        
        # –õ–æ–≥–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        if result['success']:
            restored_count = len(result.get('restored_tables', []))
            logger.info(f"–ü–æ–ª–Ω–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ë–î –∑–∞–≤–µ—Ä—à–µ–Ω–æ –≤–ª–∞–¥–µ–ª—å—Ü–µ–º {user_id}: –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ {restored_count} —Ç–∞–±–ª–∏—Ü")
        else:
            logger.error(f"–û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ë–î –≤–ª–∞–¥–µ–ª—å—Ü–µ–º {user_id}: {result.get('error')}")
        
        # –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç
        context.user_data.pop('pending_restore_file', None)
        
    except Exception as e:
        logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –ë–î: {e}")
        
        try:
            await processing_message.edit_text(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –ë–î. "
                "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π.",
                parse_mode=ParseMode.MARKDOWN
            )
        except Exception:
            await update.message.reply_text(
                "‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –ë–î.",
                parse_mode=ParseMode.MARKDOWN
            )
    
    finally:
        # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        if file_path:
            ImportService.cleanup_temp_file(file_path)

def register_import_handlers(application):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∏–º–ø–æ—Ä—Ç–∞"""
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ Excel —Ñ–∞–π–ª–æ–≤ (—Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏)
    application.add_handler(
        MessageHandler(
            filters.Document.MimeType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"),
            handle_directories_excel
        )
    )
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ë–î
    application.add_handler(
        MessageHandler(
            filters.TEXT & filters.Regex(r'^CONFIRM RESTORE$'),
            handle_restore_confirmation
        )
    )
    
    logger.info("‚úÖ Import handlers –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")