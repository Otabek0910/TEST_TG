"""
–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è–º–∏ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö - –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø
"""

import logging
import asyncio
from typing import Optional
import psycopg2
from config.settings import DATABASE_URL

logger = logging.getLogger(__name__)

class DatabaseManager:
    """–ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π –∫ PostgreSQL"""
    
    def __init__(self):
        self.connection_url = DATABASE_URL
        self._connection_pool = None
        
    async def initialize(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è connection pool (–ø–æ–∫–∞ –∑–∞–≥–ª—É—à–∫–∞)"""
        logger.info("üìä Database manager –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        # TODO: –í –±—É–¥—É—â–µ–º –∑–¥–µ—Å—å –±—É–¥–µ—Ç asyncpg connection pool
        
    async def close(self):
        """–ó–∞–∫—Ä—ã—Ç–∏–µ –≤—Å–µ—Ö —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π"""
        logger.info("üìä Database connections –∑–∞–∫—Ä—ã—Ç—ã")
        # TODO: –ó–∞–∫—Ä—ã—Ç–∏–µ connection pool
        
    def get_sync_connection(self):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è (–≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ)"""
        try:
            return psycopg2.connect(self.connection_url)
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î: {e}")
            raise

# –î–û–ë–ê–í–õ–Ø–ï–ú –ì–õ–û–ë–ê–õ–¨–ù–´–ô –≠–ö–ó–ï–ú–ü–õ–Ø–† –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
db_manager = DatabaseManager()