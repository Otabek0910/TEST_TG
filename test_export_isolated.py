# test_export_isolated.py
# –¢–µ—Å—Ç–∏—Ä—É–µ–º —ç–∫—Å–ø–æ—Ä—Ç-—Å–µ—Ä–≤–∏—Å –∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω–æ –±–µ–∑ —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö –∏–º–ø–æ—Ä—Ç–æ–≤

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –≤ path
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

def test_export_service():
    """–¢–µ—Å—Ç ExportService –∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω–æ"""
    try:
        # –ü—Ä—è–º–æ–π –∏–º–ø–æ—Ä—Ç –±–µ–∑ services.__init__
        from services.export_service import ExportService
        
        print("‚úÖ ExportService –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        # –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
        ExportService.create_temp_directory()
        print("‚úÖ –í—Ä–µ–º–µ–Ω–Ω–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å–æ–∑–¥–∞–Ω–∞")
        
        # –¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —à–∞–±–ª–æ–Ω–∞ (—Ç—Ä–µ–±—É–µ—Ç –ë–î)
        try:
            file_path = ExportService.generate_directories_template()
            if file_path:
                print(f"‚úÖ –®–∞–±–ª–æ–Ω —Å–æ–∑–¥–∞–Ω: {file_path}")
            else:
                print("‚ö†Ô∏è –®–∞–±–ª–æ–Ω –Ω–µ —Å–æ–∑–¥–∞–Ω (–≤–æ–∑–º–æ–∂–Ω–æ, –Ω–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î)")
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —à–∞–±–ª–æ–Ω–∞ (–æ–∂–∏–¥–∞–µ–º–æ –±–µ–∑ –ë–î): {e}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def test_import_service():
    """–¢–µ—Å—Ç ImportService –∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω–æ"""
    try:
        # –ü—Ä—è–º–æ–π –∏–º–ø–æ—Ä—Ç –±–µ–∑ services.__init__
        from services.import_service import ImportService
        
        print("‚úÖ ImportService –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        # –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
        ImportService.create_temp_directory()
        print("‚úÖ –í—Ä–µ–º–µ–Ω–Ω–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å–æ–∑–¥–∞–Ω–∞")
        
        # –¢–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Ñ–∞–π–ª–∞
        result = ImportService.validate_excel_file('nonexistent.xlsx')
        if not result['valid']:
            print("‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Ñ–∞–π–ª–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def test_constants():
    """–¢–µ—Å—Ç –∫–æ–Ω—Å—Ç–∞–Ω—Ç"""
    try:
        from utils.constants import ALL_TABLE_NAMES_FOR_BACKUP, TEMP_DIR
        
        print(f"‚úÖ –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã:")
        print(f"  - TEMP_DIR: {TEMP_DIR}")
        print(f"  - –¢–∞–±–ª–∏—Ü –¥–ª—è –±—ç–∫–∞–ø–∞: {len(ALL_TABLE_NAMES_FOR_BACKUP)}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Å—Ç–∞–Ω—Ç: {e}")
        return False

if __name__ == "__main__":
    print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω–æ import/export —Å–µ—Ä–≤–∏—Å—ã...")
    print()
    
    print("1. –¢–µ—Å—Ç –∫–æ–Ω—Å—Ç–∞–Ω—Ç:")
    test_constants()
    print()
    
    print("2. –¢–µ—Å—Ç ExportService:")
    test_export_service()
    print()
    
    print("3. –¢–µ—Å—Ç ImportService:")
    test_import_service()
    print()
    
    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")